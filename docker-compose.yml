version: '3'

volumes:
  db_data: {}


services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data:rw

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1"

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    depends_on:
      - fastapi
      - redis
      - kafka

  redis:
    image: redis:7.4-rc2-alpine3.20
    ports:
      - "6379:6379" 
